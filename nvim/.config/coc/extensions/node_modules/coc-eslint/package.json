{
  "_args": [
    [
      "coc-eslint@1.3.2",
      "/Users/julianiaquinandi/.dotfiles/nvim/.config/coc/extensions"
    ]
  ],
  "_from": "coc-eslint@1.3.2",
  "_id": "coc-eslint@1.3.2",
  "_inBundle": false,
  "_integrity": "sha512-4eKNFSYkwo2elYrtxRdQbe9HuSLVBYk5uBVHt7VPvEjysAGAZZJ8sUha8gl32mWbSrbbbrbIP1SfOomVJPQeNQ==",
  "_location": "/coc-eslint",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "coc-eslint@1.3.2",
    "name": "coc-eslint",
    "escapedName": "coc-eslint",
    "rawSpec": "1.3.2",
    "saveSpec": null,
    "fetchSpec": "1.3.2"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/coc-eslint/-/coc-eslint-1.3.2.tgz",
  "_spec": "1.3.2",
  "_where": "/Users/julianiaquinandi/.dotfiles/nvim/.config/coc/extensions",
  "activationEvents": [
    "*"
  ],
  "author": {
    "name": "chemzqm@gmail.com"
  },
  "contributes": {
    "commands": [
      {
        "title": "Fix all auto-fixable problems",
        "category": "ESLint",
        "command": "eslint.executeAutofix"
      },
      {
        "title": "Create a '.eslintrc' config file",
        "category": "ESLint",
        "command": "eslint.createConfig"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Eslint",
      "properties": {
        "eslint.enable": {
          "type": "boolean",
          "default": true,
          "description": "enable lint for files."
        },
        "eslint.quiet": {
          "type": "boolean",
          "default": false,
          "description": "Turns on quiet mode, which ignores warnings."
        },
        "eslint.nodeEnv": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The value of NODE_ENV to use when running eslint tasks."
        },
        "eslint.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ]
        },
        "eslint.execArgv": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "eslint.filetypes": {
          "type": "array",
          "default": [
            "javascript",
            "javascriptreact",
            "typescript",
            "typescriptreact"
          ],
          "items": {
            "type": "string"
          }
        },
        "eslint.packageManager": {
          "type": "string",
          "default": "npm",
          "enum": [
            "npm",
            "yarn"
          ]
        },
        "eslint.run": {
          "type": "string",
          "default": "onType",
          "enum": [
            "onType",
            "onSave"
          ]
        },
        "eslint.runtime": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "The location of the node binary to run ESLint under."
        },
        "eslint.nodePath": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "A path added to NODE_PATH when resolving the eslint module."
        },
        "eslint.autoFix": {
          "type": "boolean",
          "default": true,
          "description": "Enable auto fix feature"
        },
        "eslint.options": {
          "scope": "resource",
          "type": "object",
          "default": {},
          "description": "The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."
        },
        "eslint.autoFixOnSave": {
          "type": "boolean",
          "default": false
        },
        "eslint.autoFixSkipRules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Rules that should be skipped when autofixing."
        },
        "eslint.codeAction.disableRuleComment": {
          "scope": "resource",
          "type": "object",
          "default": {
            "enable": true,
            "location": "separateLine"
          },
          "properties": {
            "enable": {
              "type": "boolean",
              "default": true,
              "description": "Show the disable code actions."
            },
            "location": {
              "type": "string",
              "enum": [
                "separateLine",
                "sameLine"
              ],
              "default": "separateLine",
              "description": "Configure the disable rule code action to insert the comment on the same line or a new line."
            }
          }
        },
        "eslint.codeAction.showDocumentation": {
          "scope": "resource",
          "type": "object",
          "default": {
            "enable": true
          },
          "properties": {
            "enable": {
              "type": "boolean",
              "default": true,
              "description": "Show the documentation code actions."
            }
          }
        }
      }
    }
  },
  "dependencies": {},
  "description": "eslint extension for coc",
  "devDependencies": {
    "@chemzqm/tsconfig": "^0.0.3",
    "@types/eslint": "^7.2.2",
    "@types/fast-diff": "^1.2.0",
    "@types/node": "^10.12.0",
    "coc.nvim": "0.0.79",
    "eslint": "^7.9.0",
    "fast-diff": "^1.2.0",
    "rimraf": "^3.0.0",
    "ts-loader": "^6.2.1",
    "typescript": "^3.7.4",
    "vscode-languageserver": "^6.1.1",
    "vscode-languageserver-protocol": "3.15.3",
    "vscode-languageserver-textdocument": "^1.0.0",
    "vscode-uri": "^2.1.1",
    "webpack": "^4.41.5",
    "webpack-cli": "^3.3.10",
    "which": "^2.0.2"
  },
  "engines": {
    "coc": "^0.0.64"
  },
  "keywords": [
    "coc.nvim",
    "eslint"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "coc-eslint",
  "publisher": "chemzqm",
  "scripts": {
    "build": "webpack",
    "clean": "rimraf lib",
    "prepare": "npx npm-run-all clean build"
  },
  "version": "1.3.2"
}
